"""Initial migration

Revision ID: 056f539b5f4e
Revises: 
Create Date: 2025-07-29 16:43:28.205040

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import geoalchemy2

# revision identifiers, used by Alembic.
revision: str = '056f539b5f4e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tennis_courts',
    sa.Column('court_id', sa.String(length=255), nullable=False),
    sa.Column('court_name', sa.String(length=255), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('coordinates', geoalchemy2.types.Geography(geometry_type='POINT', dimension=2, from_text='ST_GeogFromText', name='geography'), nullable=True),
    sa.Column('court_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('first_seen_at', sa.DateTime(), nullable=True),
    sa.Column('last_updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('court_id'),
    schema='dwh'
    )
    op.create_index('idx_tennis_courts_coordinates', 'tennis_courts', ['coordinates'], unique=False, schema='dwh', postgresql_using='gist')
    op.create_table('file_registry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('load_timestamp', sa.DateTime(), nullable=True),
    sa.Column('file_hash', sa.String(length=64), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='raw_files'
    )
    op.create_table('court_availability_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('court_id', sa.String(length=255), nullable=True),
    sa.Column('availability_date', sa.Date(), nullable=False),
    sa.Column('time_slot', sa.String(length=50), nullable=False),
    sa.Column('is_available', sa.Boolean(), nullable=False),
    sa.Column('checked_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['court_id'], ['dwh.tennis_courts.court_id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='dwh'
    )
    op.create_table('tennis_courts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('court_id', sa.String(length=255), nullable=False),
    sa.Column('court_name', sa.String(length=255), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('latitude', sa.DECIMAL(precision=10, scale=8), nullable=True),
    sa.Column('longitude', sa.DECIMAL(precision=11, scale=8), nullable=True),
    sa.Column('raw_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('file_id', sa.Integer(), nullable=True),
    sa.Column('loaded_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['raw_files.file_registry.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='staging'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tennis_courts', schema='staging')
    op.drop_table('court_availability_history', schema='dwh')
    op.drop_table('file_registry', schema='raw_files')
    op.drop_index('idx_tennis_courts_coordinates', table_name='tennis_courts', schema='dwh', postgresql_using='gist')
    op.drop_table('tennis_courts', schema='dwh')
    # ### end Alembic commands ###
